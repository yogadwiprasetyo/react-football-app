{"version":3,"sources":["App/required-list/list.js","App/logic/constant.js","App/components/all.js","App.js","serviceWorker.js","index.js"],"names":["listLeague","10","11","13","14","15","navListLeague","path","src","text","routeListNavigation","title","league","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","SelectedLeague","results","useContext","VideosContext","length","custom","padding","RoutesNavigation","map","route","exact","key","NavLeague","item","to","className","activeClassName","alt","width","height","Video","result","video","Math","random","content","VideoFilter","alreadyFilter","filter","competition","name","filterLeague","VideoContent","videos","date","offset","once","dangerouslySetInnerHTML","__html","embed","id","Date","toLocaleDateString","Loading","style","Empty","EndPage","React","createContext","FootballVideo","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","a","axios","fetchData","useDataApi","Provider","value","size","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.22f4184b.chunk.js","sourcesContent":["export const listLeague = {\r\n  10: 'Ligue 1',\r\n  11: 'Bundesliga',\r\n  13: 'Serie A',\r\n  14: 'La Liga',\r\n  15: 'Premier League',\r\n}\r\n\r\nexport const navListLeague = [\r\n  {\r\n    path: '/premier-league',\r\n    src: 'https://i.ibb.co/X7q8nrH/premier-league-logo.png',\r\n    text: 'Premier League'\r\n  },\r\n  {\r\n    path: '/la-liga',\r\n    src: 'https://i.ibb.co/KbxGJ6H/la-liga-logo-edit.png',\r\n    text: 'La Liga'\r\n  },\r\n  {\r\n    path: 'serie-a',\r\n    src: 'https://i.ibb.co/SvyjCJm/serie-a-logo-edit.png',\r\n    text: 'Serie A'\r\n  },\r\n  {\r\n    path: '/bundesliga',\r\n    src: 'https://i.ibb.co/7SngpfR/bundesliga-logo-edit.png',\r\n    text: 'Bundesliga'\r\n  },\r\n  {\r\n    path: '/ligue-1',\r\n    src: 'https://i.ibb.co/Svb75RZ/league-1-logo-edit.png',\r\n    text: 'Ligue 1'\r\n  }\r\n]\r\n\r\nexport const routeListNavigation = [\r\n  {\r\n    path: '/premier-league',\r\n    title: 'Highlights of match videos from the Premier League',\r\n    league: 'ENGLAND: Premier League'\r\n  },\r\n  {\r\n    path: '/la-liga',\r\n    title: 'Highlights of match videos from the La Liga',\r\n    league: 'SPAIN: La Liga'\r\n  },\r\n  {\r\n    path: '/serie-a',\r\n    title: 'Highlights of match videos from the Serie A',\r\n    league: 'ITALY: Serie A'\r\n  },\r\n  {\r\n    path: '/bundesliga',\r\n    title: 'Highlights of match videos from the Bundesliga',\r\n    league: 'GERMANY: Bundesliga'\r\n  },\r\n  {\r\n    path: '/ligue-1',\r\n    title: 'Highlights of match videos from the Ligue 1',\r\n    league: 'FRANCE: Ligue 1'\r\n  }\r\n]","import { \r\n  useState,\r\n  useReducer,\r\n  useEffect,\r\n} from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const endpoint = 'https://www.scorebat.com/video-api/v1/'\r\n\r\n/**\r\n * * convert date with time to only date \r\n */\r\nexport const convertDate = (dateTime) => {\r\n  const date = new Date(dateTime)\r\n  return date.toLocaleDateString() \r\n}\r\n\r\n/**\r\n * \r\n * @param video: video from endpoint API \r\n * @param league: selected league\r\n * * Filter video based on league from parameter\r\n */\r\nexport const filterLeague = (video, league) => video.competition.name === league\r\n\r\n\r\n/** USE CUSTOM FETCH DATA FROM API */\r\n// Reducer\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\n// Use Custom\r\nexport const useDataApi = (initialUrl, initialData) => {\r\n  const [url, setUrl] = useState(initialUrl);\r\n \r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: initialData,\r\n  });\r\n \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios(url);\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n      } catch (error) {\r\n        dispatch({ type: 'FETCH_FAILURE' });\r\n      }\r\n\r\n    };\r\n \r\n    fetchData();\r\n  }, [url]);\r\n \r\n  return [state, setUrl]\r\n};","import React, { useContext } from 'react'\r\n\r\nimport {\r\n  listLeague,\r\n  navListLeague,\r\n  routeListNavigation\r\n} from './../required-list/list'\r\n\r\nimport {\r\n  Route,\r\n  NavLink\r\n} from 'react-router-dom'\r\n\r\nimport {\r\n  convertDate,\r\n  filterLeague\r\n} from './../logic/constant'\r\n\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nimport { VideosContext } from './../../App'\r\n\r\nimport './components.css'\r\n\r\n/** SELECTED LEAGUE PAGE */\r\nexport function SelectedLeague({ title, league }) {\r\n  const results = useContext(VideosContext)\r\n\r\n  return (\r\n    <>\r\n    <h1>{title}</h1>\r\n    {results.length\r\n      ? <VideoFilter league={league} />\r\n      : <Loading custom={{ padding: '35vh 0' }}/>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\n/** ROUTE NAVIGATION LEAGUE */ \r\nexport const RoutesNavigation = () => routeListNavigation.map(\r\n  route => (\r\n    <Route\r\n      exact\r\n      key={route.path}\r\n      path={route.path}>\r\n      <SelectedLeague \r\n        title={route.title} \r\n        league={route.league}\r\n      />\r\n    </Route>\r\n  )\r\n)\r\n\r\n/** NAVBAR LEAGUE */\r\nexport const NavLeague = () => {\r\n  return (\r\n    <nav>\r\n    {navListLeague.map(\r\n      item => (\r\n        <NavLink \r\n          key={item.text} \r\n          to={item.path}\r\n          className='content-nav-league'\r\n          activeClassName='active-nav'>\r\n          <img \r\n            src={item.src} \r\n            alt={item.text} \r\n            width='30px'\r\n            height='30px'\r\n            className='img-nav-league'\r\n          />\r\n          <p className='text-nav-league'>\r\n            {item.text}\r\n          </p>\r\n        </NavLink>\r\n      )\r\n    )}\r\n    </nav>\r\n  )\r\n}\r\n\r\n/** VIDEO */\r\nexport const Video = ({ result }) => {\r\n  /**\r\n   * * If video content is empty, render Empty\r\n   */\r\n  if (!result.length) {\r\n    return <Empty/>\r\n  }\r\n  \r\n  return (\r\n    <div className='desktop-content-video'>\r\n    {\r\n      result.map(\r\n        video => <VideoContent key={Math.random()} content={video} />\r\n      )\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n/** VIDEO LEAGUE FILTER */\r\nexport const VideoFilter = ({ league }) => {\r\n  // Use Context\r\n  const results = useContext(VideosContext)\r\n\r\n  /**\r\n   * * Filter video content before render\r\n   */ \r\n  const alreadyFilter = results.filter(\r\n    video => filterLeague(video, league)\r\n  )\r\n\r\n  /**\r\n   * * If video already filter is empty, render Empty\r\n   */\r\n  if (!alreadyFilter.length) {\r\n    return <Empty/>\r\n  }\r\n  \r\n  return (\r\n    <div className='desktop-content-video'>\r\n    {\r\n      alreadyFilter.map(\r\n        video => <VideoContent key={video.title} content={video} />\r\n      )\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n/** CONTENT OF VIDEO */\r\nexport const VideoContent = ({ content }) => {\r\n  // Destructure Objects from content\r\n  const {\r\n    title,\r\n    videos,\r\n    date,\r\n    competition\r\n  } = content\r\n\r\n  return (\r\n    <div className='video-content' key={title}>\r\n      <LazyLoad \r\n        offset={200}\r\n        height={220}\r\n        once>\r\n      <div \r\n        dangerouslySetInnerHTML={{__html: videos[0].embed}} \r\n      />\r\n      </LazyLoad>\r\n      <p className='title'>HIGHLIGHTS | {title}</p>\r\n      <div className='description'>\r\n        <p>{listLeague[competition.id]}</p>\r\n        <p>{convertDate(date)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** LOADING CONTENTS */\r\nexport const Loading = ({ custom }) => (\r\n  <div className='container-loading' style={custom}>\r\n    <div className='loading'></div>\r\n  </div>\r\n) \r\n\r\n/** EMPTY CONTENTS */\r\nexport const Empty = ({ custom, text }) => (\r\n  <div className='container-empty' style={custom}>\r\n    <div className='contents-empty'>\r\n      <img \r\n        src='https://i.ibb.co/dQPZn7d/not-found.png' \r\n        alt='No results found'\r\n        width='100px'\r\n        height='100px'\r\n      />\r\n      <div className='message-empty' style={text}>\r\n        No results found\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\n/** END PAGE */\r\nexport const EndPage = () => (\r\n  <p className='end-page'>\r\n    No videos more\r\n  </p>\r\n)","import React from 'react'\n\nimport {\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport {\n  RoutesNavigation,\n  NavLeague,\n  Video,\n  Loading,\n  EndPage\n} from './App/components/all'\n\nimport {\n  endpoint,\n  useDataApi\n} from './App/logic/constant'\n\nimport { RiHome2Line } from 'react-icons/ri'\n\nimport './App.css'\n\nexport const VideosContext = React.createContext() \n\nexport default function FootballVideo() {\n  const [videos] = useDataApi(endpoint, [])\n\n  return (\n    <VideosContext.Provider value={videos.data}>\n      {/** NAVIGASI HOME FIX */}\n      <Link \n        to='/' \n        className='fixed-home'>\n          <RiHome2Line \n            size='2em' \n            color='black' \n            className='home-fix' \n          />\n        </Link>\n\n      {/** NAVBAR LEAGUE */}\n      <NavLeague />\n\n      {/* ROUTE PATH */}\n      <Switch>\n        <Route exact path='/'>\n          <h1>Highlights videos of matches from Europe's top leagues</h1>\n          <hr/>\n          {videos.data.length\n            ? <Video result={videos.data} />\n            : <Loading custom={{ padding: '35vh 0' }}/>\n          }\n        </Route>\n        <RoutesNavigation />\n      </Switch>\n      \n      {/* END PAGE */}\n      <EndPage/>\n    </VideosContext.Provider>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport FootballVideo from './App';\n\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <FootballVideo />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}